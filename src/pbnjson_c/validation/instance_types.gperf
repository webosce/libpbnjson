// Copyright (c) 2009-2024 LG Electronics, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

%define hash-function-name instance_type_hash
%define lookup-function-name instance_type_lookup
%readonly-tables
%pic
%compare-strncmp
%enum
%includes
%struct-type

%{
	#include "array_validator.h"
	#include "boolean_validator.h"
	#include "null_validator.h"
	#include "number_validator.h"
	#include "object_validator.h"
	#include "string_validator.h"
	#include "combined_types_validator.h"
	#include "generic_validator.h"

	typedef struct _Validator Validator;
	typedef enum _ValidatorType ValidatorType;

	// Suppress warnings in the gperf generated code
	#pragma GCC system_header
%}

struct InstanceTypeFactory { long name; Validator *(*create)(void); ValidatorType type; };

%%
array,          array_validator_instance,   V_ARR
boolean,        boolean_validator_instance, V_BOOL
integer,        integer_validator_instance, V_INT
null,           null_validator_instance,    V_NULL
number,         number_validator_instance,  V_NUM
object,         object_validator_instance,  V_OBJ
string,         string_validator_instance,  V_STR
